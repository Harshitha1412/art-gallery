{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\components\\\\ArtworkList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/ArtworkList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ArtworkList() {\n  _s();\n  const [artworks, setArtworks] = useState([]);\n  const [userId, setUserId] = useState(null); // Store userId from localStorage\n  const navigate = useNavigate();\n\n  // Fetch userId from localStorage and fetch artworks from API\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId'); // Get userId from localStorage\n    setUserId(storedUserId); // Set userId in state\n    fetchArtworks(); // Fetch artworks on initial render\n  }, []);\n\n  // Fetch artworks from the API\n  const fetchArtworks = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/artworks');\n      if (response.ok) {\n        const data = await response.json();\n        setArtworks(data); // Set artworks data\n      } else {\n        console.error('Failed to fetch artworks');\n      }\n    } catch (error) {\n      console.error('Error fetching artworks:', error);\n    }\n  };\n\n  // Add an artwork to the cart and save to localStorage\n  const handleAddToCart = artwork => {\n    const currentCart = JSON.parse(localStorage.getItem('cartItems')) || [];\n\n    // Check if artwork already exists in cart\n    const isAlreadyInCart = currentCart.some(item => item.id === artwork.id);\n    if (!isAlreadyInCart) {\n      const updatedCart = [...currentCart, artwork];\n      localStorage.setItem('cartItems', JSON.stringify(updatedCart)); // Save updated cart to localStorage\n    }\n  };\n\n  // Go to cart page\n  const handleGoToCart = () => {\n    if (userId) {\n      navigate(`/${userId}/cart`); // Navigate to the cart page\n    } else {\n      console.error('User ID is not available');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artwork-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Artworks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artwork-grid\",\n      children: artworks.map(artwork => {\n        var _JSON$parse;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artwork-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artwork-image-container\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:8080${artwork.imagePath}`,\n              alt: artwork.title,\n              className: \"artwork-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"artwork-title\",\n            children: artwork.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"artwork-hover-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"artwork-artist\",\n              children: [\"By: \", artwork.artist]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"artwork-description\",\n              children: artwork.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artwork-cost\",\n            children: [\"Cost: \", artwork.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), !((_JSON$parse = JSON.parse(localStorage.getItem('cartItems'))) !== null && _JSON$parse !== void 0 && _JSON$parse.some(item => item.id === artwork.id)) ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cart-button\",\n            onClick: () => handleAddToCart(artwork),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cart-button\",\n            onClick: handleGoToCart,\n            children: \"Go to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, artwork.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtworkList, \"1XFTng3iJh87M4u29Kh56ymAS38=\", false, function () {\n  return [useNavigate];\n});\n_c = ArtworkList;\nvar _c;\n$RefreshReg$(_c, \"ArtworkList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","ArtworkList","_s","artworks","setArtworks","userId","setUserId","navigate","storedUserId","localStorage","getItem","fetchArtworks","response","fetch","ok","data","json","console","error","handleAddToCart","artwork","currentCart","JSON","parse","isAlreadyInCart","some","item","id","updatedCart","setItem","stringify","handleGoToCart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_JSON$parse","src","imagePath","alt","title","artist","description","cost","onClick","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/components/ArtworkList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ArtworkList.css';\r\n\r\nexport default function ArtworkList() {\r\n  const [artworks, setArtworks] = useState([]);\r\n  const [userId, setUserId] = useState(null); // Store userId from localStorage\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch userId from localStorage and fetch artworks from API\r\n  useEffect(() => {\r\n    const storedUserId = localStorage.getItem('userId'); // Get userId from localStorage\r\n    setUserId(storedUserId); // Set userId in state\r\n    fetchArtworks(); // Fetch artworks on initial render\r\n  }, []);\r\n\r\n  // Fetch artworks from the API\r\n  const fetchArtworks = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/artworks');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setArtworks(data); // Set artworks data\r\n      } else {\r\n        console.error('Failed to fetch artworks');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching artworks:', error);\r\n    }\r\n  };\r\n\r\n  // Add an artwork to the cart and save to localStorage\r\n  const handleAddToCart = (artwork) => {\r\n    const currentCart = JSON.parse(localStorage.getItem('cartItems')) || [];\r\n\r\n    // Check if artwork already exists in cart\r\n    const isAlreadyInCart = currentCart.some(item => item.id === artwork.id);\r\n    if (!isAlreadyInCart) {\r\n      const updatedCart = [...currentCart, artwork];\r\n      localStorage.setItem('cartItems', JSON.stringify(updatedCart)); // Save updated cart to localStorage\r\n    }\r\n  };\r\n\r\n  // Go to cart page\r\n  const handleGoToCart = () => {\r\n    if (userId) {\r\n      navigate(`/${userId}/cart`); // Navigate to the cart page\r\n    } else {\r\n      console.error('User ID is not available');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"artwork-list\">\r\n      <h1>Artworks</h1>\r\n      <div className=\"artwork-grid\">\r\n        {artworks.map((artwork) => (\r\n          <div key={artwork.id} className=\"artwork-card\">\r\n            <div className=\"artwork-image-container\">\r\n              <img\r\n                src={`http://localhost:8080${artwork.imagePath}`}\r\n                alt={artwork.title}\r\n                className=\"artwork-image\"\r\n              />\r\n            </div>\r\n            <h2 className=\"artwork-title\">{artwork.title}</h2>\r\n            <div className=\"artwork-hover-details\">\r\n              <p className=\"artwork-artist\">By: {artwork.artist}</p>\r\n              <p className=\"artwork-description\">{artwork.description}</p>\r\n            </div>\r\n            <p className=\"artwork-cost\">Cost: {artwork.cost}</p>\r\n\r\n            {/* Show \"Add to Cart\" initially, and \"Go to Cart\" once added */}\r\n            {!JSON.parse(localStorage.getItem('cartItems'))?.some(item => item.id === artwork.id) ? (\r\n              <button className=\"cart-button\" onClick={() => handleAddToCart(artwork)}>\r\n                Add to Cart\r\n              </button>\r\n            ) : (\r\n              <button className=\"cart-button\" onClick={handleGoToCart}>\r\n                Go to Cart\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}