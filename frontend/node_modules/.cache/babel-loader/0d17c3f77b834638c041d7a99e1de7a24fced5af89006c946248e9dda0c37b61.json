{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\Artist\\\\ArtistProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistProfilePage = () => {\n  _s();\n  const [artistDetails, setArtistDetails] = useState({\n    name: '',\n    email: '',\n    username: '',\n    image: ''\n  });\n  const [newImage, setNewImage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const artistId = localStorage.getItem('artistId'); // Fetch artistId from localStorage\n\n  // Fetch artist details on component mount\n  useEffect(() => {\n    if (!artistId) {\n      setErrorMessage('Artist not logged in.');\n      return;\n    }\n\n    // Fetch artist details from API\n    axios.get(`http://localhost:8080/api/artists/${artistId}`).then(response => {\n      setArtistDetails(response.data);\n    }).catch(error => {\n      setErrorMessage('Failed to fetch artist details.');\n      console.error(error);\n    });\n  }, [artistId]);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setNewImage(file);\n    }\n  };\n  const handleUpdateProfile = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', artistDetails.name);\n    formData.append('email', artistDetails.email);\n    formData.append('username', artistDetails.username);\n    if (newImage) formData.append('image', newImage);\n    try {\n      const response = await axios.put(`http://localhost:8080/api/artists/update/${artistId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSuccessMessage(response.data.message);\n    } catch (error) {\n      setErrorMessage('Failed to update profile.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Artist Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateProfile,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-image-container\",\n        children: artistDetails.image ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:8080${artistDetails.image}`,\n          alt: \"Profile\",\n          className: \"profile-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No image available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: artistDetails.name,\n          onChange: e => setArtistDetails({\n            ...artistDetails,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: artistDetails.email,\n          onChange: e => setArtistDetails({\n            ...artistDetails,\n            email: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: artistDetails.username,\n          onChange: e => setArtistDetails({\n            ...artistDetails,\n            username: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Profile Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistProfilePage, \"3XlZAHop4YOhNxw2AL9mVbYVhso=\");\n_c = ArtistProfilePage;\nexport default ArtistProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ArtistProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ArtistProfilePage","_s","artistDetails","setArtistDetails","name","email","username","image","newImage","setNewImage","errorMessage","setErrorMessage","successMessage","setSuccessMessage","artistId","localStorage","getItem","get","then","response","data","catch","error","console","handleImageChange","e","file","target","files","handleUpdateProfile","preventDefault","formData","FormData","append","put","headers","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","src","alt","type","value","onChange","required","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/Artist/ArtistProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ArtistProfilePage = () => {\r\n  const [artistDetails, setArtistDetails] = useState({\r\n    name: '',\r\n    email: '',\r\n    username: '',\r\n    image: '',\r\n  });\r\n  const [newImage, setNewImage] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const artistId = localStorage.getItem('artistId'); // Fetch artistId from localStorage\r\n\r\n  // Fetch artist details on component mount\r\n  useEffect(() => {\r\n    if (!artistId) {\r\n      setErrorMessage('Artist not logged in.');\r\n      return;\r\n    }\r\n\r\n    // Fetch artist details from API\r\n    axios\r\n      .get(`http://localhost:8080/api/artists/${artistId}`)\r\n      .then((response) => {\r\n        setArtistDetails(response.data);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage('Failed to fetch artist details.');\r\n        console.error(error);\r\n      });\r\n  }, [artistId]);\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setNewImage(file);\r\n    }\r\n  };\r\n\r\n  const handleUpdateProfile = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append('name', artistDetails.name);\r\n    formData.append('email', artistDetails.email);\r\n    formData.append('username', artistDetails.username);\r\n    if (newImage) formData.append('image', newImage);\r\n\r\n    try {\r\n      const response = await axios.put(\r\n        `http://localhost:8080/api/artists/update/${artistId}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        }\r\n      );\r\n      setSuccessMessage(response.data.message);\r\n    } catch (error) {\r\n      setErrorMessage('Failed to update profile.');\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"artist-profile-container\">\r\n      <h2>Artist Profile</h2>\r\n\r\n      {/* Error or success messages */}\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n\r\n      <form onSubmit={handleUpdateProfile}>\r\n        {/* Profile Image */}\r\n        <div className=\"profile-image-container\">\r\n          {artistDetails.image ? (\r\n            <img\r\n              src={`http://localhost:8080${artistDetails.image}`}\r\n              alt=\"Profile\"\r\n              className=\"profile-image\"\r\n            />\r\n          ) : (\r\n            <p>No image available</p>\r\n          )}\r\n        </div>\r\n\r\n        <div>\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={artistDetails.name}\r\n            onChange={(e) =>\r\n              setArtistDetails({ ...artistDetails, name: e.target.value })\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            value={artistDetails.email}\r\n            onChange={(e) =>\r\n              setArtistDetails({ ...artistDetails, email: e.target.value })\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Username</label>\r\n          <input\r\n            type=\"text\"\r\n            value={artistDetails.username}\r\n            onChange={(e) =>\r\n              setArtistDetails({ ...artistDetails, username: e.target.value })\r\n            }\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label>Profile Image</label>\r\n          <input type=\"file\" onChange={handleImageChange} />\r\n        </div>\r\n\r\n        <button type=\"submit\">Update Profile</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArtistProfilePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}