{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\Artist\\\\Myartworks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../styles/MyArtworks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyArtworks() {\n  _s();\n  const [filteredArtworks, setFilteredArtworks] = useState([]); // Artworks filtered by the logged-in artist\n  const [errorMessage, setErrorMessage] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const userId = localStorage.getItem('userId'); // Get logged-in user ID from localStorage\n\n  // Fetch user details to get the artist's name\n  useEffect(() => {\n    if (!userId) {\n      setErrorMessage('User not logged in.');\n      return;\n    }\n\n    // Fetch user details to identify the logged-in artist\n    axios.get(`http://localhost:8080/api/users/${userId}`).then(response => {\n      setUserDetails(response.data); // Store user details\n      fetchArtworks(response.data.username); // Fetch artworks for the logged-in artist\n    }).catch(error => {\n      setErrorMessage('Failed to fetch user details.');\n      console.error(error);\n    });\n  }, [userId]);\n\n  // Fetch all artworks from the backend and filter them based on the logged-in artist\n  const fetchArtworks = artistName => {\n    axios.get('http://localhost:8080/api/artworks').then(response => {\n      const artistArtworks = response.data.filter(artwork => artwork.artist === artistName // Filter based on artist's name\n      );\n      setFilteredArtworks(artistArtworks); // Set filtered artworks belonging to the logged-in artist\n    }).catch(error => {\n      setErrorMessage('Failed to fetch artworks.');\n      console.error(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-artworks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Artworks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artworks-container\",\n      children: filteredArtworks.length > 0 ? filteredArtworks.map(artwork => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artwork-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artwork.imagePath ? `/uploads/${artwork.imagePath}` : '/default-image.jpg',\n          alt: artwork.artist,\n          onError: e => e.target.src = '/default-image.jpg' // Fallback for missing images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: artwork.title || 'Untitled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Artist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 18\n          }, this), \" \", artwork.artist || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 18\n          }, this), \" $\", artwork.cost || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 18\n          }, this), \" \", artwork.description || 'No description available']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Added On:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 18\n          }, this), \" \", artwork.timestamp ? new Date(artwork.timestamp).toLocaleString() : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, artwork.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No artworks found for this artist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(MyArtworks, \"qzUcnleY6Bv7kKIO48dZwMvscQQ=\");\n_c = MyArtworks;\nvar _c;\n$RefreshReg$(_c, \"MyArtworks\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MyArtworks","_s","filteredArtworks","setFilteredArtworks","errorMessage","setErrorMessage","userDetails","setUserDetails","userId","localStorage","getItem","get","then","response","data","fetchArtworks","username","catch","error","console","artistName","artistArtworks","filter","artwork","artist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","imagePath","alt","onError","e","target","title","cost","description","timestamp","Date","toLocaleString","id","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/Artist/Myartworks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/MyArtworks.css';\r\n\r\nexport default function MyArtworks() {\r\n  const [filteredArtworks, setFilteredArtworks] = useState([]); // Artworks filtered by the logged-in artist\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [userDetails, setUserDetails] = useState(null);\r\n\r\n  const userId = localStorage.getItem('userId'); // Get logged-in user ID from localStorage\r\n\r\n  // Fetch user details to get the artist's name\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      setErrorMessage('User not logged in.');\r\n      return;\r\n    }\r\n\r\n    // Fetch user details to identify the logged-in artist\r\n    axios\r\n      .get(`http://localhost:8080/api/users/${userId}`)\r\n      .then((response) => {\r\n        setUserDetails(response.data);  // Store user details\r\n        fetchArtworks(response.data.username);  // Fetch artworks for the logged-in artist\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage('Failed to fetch user details.');\r\n        console.error(error);\r\n      });\r\n  }, [userId]);\r\n\r\n  // Fetch all artworks from the backend and filter them based on the logged-in artist\r\n  const fetchArtworks = (artistName) => {\r\n    axios\r\n      .get('http://localhost:8080/api/artworks')\r\n      .then((response) => {\r\n        const artistArtworks = response.data.filter(\r\n          (artwork) => artwork.artist === artistName // Filter based on artist's name\r\n        );\r\n        setFilteredArtworks(artistArtworks);  // Set filtered artworks belonging to the logged-in artist\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage('Failed to fetch artworks.');\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-artworks\">\r\n      <h1>My Artworks</h1>\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n      <div className=\"artworks-container\">\r\n        {filteredArtworks.length > 0 ? (\r\n          filteredArtworks.map((artwork) => (\r\n            <div key={artwork.id} className=\"artwork-card\">\r\n              <img\r\n                src={artwork.imagePath ? `/uploads/${artwork.imagePath}` : '/default-image.jpg'}\r\n                alt={artwork.artist}\r\n                onError={(e) => (e.target.src = '/default-image.jpg')}  // Fallback for missing images\r\n              />\r\n              <h2>{artwork.title || 'Untitled'}</h2>\r\n              <p><strong>Artist:</strong> {artwork.artist || 'Unknown'}</p>\r\n              <p><strong>Cost:</strong> ${artwork.cost || 'N/A'}</p>\r\n              <p><strong>Description:</strong> {artwork.description || 'No description available'}</p>\r\n              <p><strong>Added On:</strong> {artwork.timestamp ? new Date(artwork.timestamp).toLocaleString() : 'Unknown'}</p>\r\n              <div className=\"actions\">\r\n                <button className=\"edit-button\">Edit</button>\r\n                <button className=\"delete-button\">Delete</button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No artworks found for this artist.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}