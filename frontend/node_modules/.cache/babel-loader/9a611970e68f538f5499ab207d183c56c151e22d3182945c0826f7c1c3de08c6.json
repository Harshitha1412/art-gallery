{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\Curator\\\\ArtworkInsights.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport img1 from '../static/god1.jpg';\nimport img2 from '../static/god2.jpg';\nimport img3 from '../static/god3.jpg';\nimport img4 from '../static/art2.jpg';\nimport img5 from '../static/paint2.jpg';\nimport img6 from '../static/god4.jpg';\nimport '../styles/ArtworkInsights.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst artworks = [{\n  id: 1,\n  artist: 'Lord Ganesha Oil Paint',\n  imageUrl: img1\n}, {\n  id: 2,\n  artist: 'Vishnu and Lakshmi: The Cosmic Balance',\n  imageUrl: img2\n}, {\n  id: 3,\n  artist: 'Radha and Krishna in a Serene Embrace',\n  imageUrl: img3\n}, {\n  id: 4,\n  artist: 'Vigorous Fight With Enemy On Elephant',\n  imageUrl: img4\n}, {\n  id: 5,\n  artist: 'Modern Art of Woman',\n  imageUrl: img5\n}, {\n  id: 6,\n  artist: 'The Woman and Her Bird',\n  imageUrl: img6\n}];\nexport default function ArtworkInsights() {\n  _s();\n  const [selectedArtwork, setSelectedArtwork] = useState(null);\n  const [insight, setInsight] = useState('');\n  const handleSelectArtwork = artwork => {\n    setSelectedArtwork(artwork);\n    setInsight(''); // Clear insight for new selection\n  };\n  const handleSaveInsight = () => {\n    console.log('Insight saved for artwork:', selectedArtwork.artist);\n    alert(`Insight saved for ${selectedArtwork.artist}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artwork-manager\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Curator Artwork Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artwork-list\",\n      children: artworks.map(artwork => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artwork-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artwork.imageUrl,\n          alt: artwork.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: artwork.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"select-button\",\n          onClick: () => handleSelectArtwork(artwork),\n          children: \"Select for Insight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, artwork.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), selectedArtwork && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Add Insights for: \", selectedArtwork.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: insight,\n        onChange: e => setInsight(e.target.value),\n        placeholder: \"Write your insights here...\",\n        className: \"insights-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveInsight,\n        className: \"save-insight-button\",\n        children: \"Save Insight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtworkInsights, \"EFdZ3de2RH0bY0Gj2K0smUSX+Uo=\");\n_c = ArtworkInsights;\nvar _c;\n$RefreshReg$(_c, \"ArtworkInsights\");","map":{"version":3,"names":["React","useState","img1","img2","img3","img4","img5","img6","jsxDEV","_jsxDEV","artworks","id","artist","imageUrl","ArtworkInsights","_s","selectedArtwork","setSelectedArtwork","insight","setInsight","handleSelectArtwork","artwork","handleSaveInsight","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","src","alt","onClick","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/Curator/ArtworkInsights.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport img1 from '../static/god1.jpg';\r\nimport img2 from '../static/god2.jpg';\r\nimport img3 from '../static/god3.jpg';\r\nimport img4 from '../static/art2.jpg';\r\nimport img5 from '../static/paint2.jpg';\r\nimport img6 from '../static/god4.jpg';\r\nimport '../styles/ArtworkInsights.css';\r\n\r\nconst artworks = [\r\n  { id: 1, artist: 'Lord Ganesha Oil Paint', imageUrl: img1 },\r\n  { id: 2, artist: 'Vishnu and Lakshmi: The Cosmic Balance', imageUrl: img2 },\r\n  { id: 3, artist: 'Radha and Krishna in a Serene Embrace', imageUrl: img3 },\r\n  { id: 4, artist: 'Vigorous Fight With Enemy On Elephant', imageUrl: img4 },\r\n  { id: 5, artist: 'Modern Art of Woman', imageUrl: img5 },\r\n  { id: 6, artist: 'The Woman and Her Bird', imageUrl: img6 },\r\n];\r\n\r\nexport default function ArtworkInsights() {\r\n  const [selectedArtwork, setSelectedArtwork] = useState(null);\r\n  const [insight, setInsight] = useState('');\r\n\r\n  const handleSelectArtwork = (artwork) => {\r\n    setSelectedArtwork(artwork);\r\n    setInsight(''); // Clear insight for new selection\r\n  };\r\n\r\n  const handleSaveInsight = () => {\r\n    console.log('Insight saved for artwork:', selectedArtwork.artist);\r\n    alert(`Insight saved for ${selectedArtwork.artist}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"artwork-manager\">\r\n      <h1>Curator Artwork Insights</h1>\r\n\r\n      {/* Artwork List Section */}\r\n      <div className=\"artwork-list\">\r\n        {artworks.map((artwork) => (\r\n          <div key={artwork.id} className=\"artwork-item\">\r\n            <img src={artwork.imageUrl} alt={artwork.artist} />\r\n            <h2>{artwork.artist}</h2>\r\n            <button className=\"select-button\" onClick={() => handleSelectArtwork(artwork)}>\r\n              Select for Insight\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Insights Section */}\r\n      {selectedArtwork && (\r\n        <div className=\"insights-section\">\r\n          <h2>Add Insights for: {selectedArtwork.artist}</h2>\r\n          <textarea\r\n            value={insight}\r\n            onChange={(e) => setInsight(e.target.value)}\r\n            placeholder=\"Write your insights here...\"\r\n            className=\"insights-textarea\"\r\n          />\r\n          <button onClick={handleSaveInsight} className=\"save-insight-button\">Save Insight</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}