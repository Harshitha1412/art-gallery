{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\components\\\\ArtworkList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/ArtistProfile.css'; // CSS file for styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ArtistProfile() {\n  _s();\n  const [artist, setArtist] = useState(null); // Store artist data\n  const [isEditing, setIsEditing] = useState(false); // Toggle edit mode\n  const [updatedArtist, setUpdatedArtist] = useState({}); // Store updated data\n  const [profileImage, setProfileImage] = useState(null); // Handle profile image upload\n\n  const artistId = 1; // Replace with dynamic artist ID if needed\n\n  // Fetch artist data on component mount\n  useEffect(() => {\n    fetchArtist();\n  }, []);\n  const fetchArtist = async () => {\n    try {\n      const response = await fetch(`http://localhost:8080/api/artists/${artistId}`); // Fetch artist by ID\n      if (response.ok) {\n        const data = await response.json();\n        setArtist(data);\n        setUpdatedArtist(data); // Initialize updated data\n      } else {\n        console.error('Failed to fetch artist data');\n      }\n    } catch (error) {\n      console.error('Error fetching artist data:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedArtist({\n      ...updatedArtist,\n      [name]: value\n    });\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setProfileImage(file);\n  };\n  const handleSave = async () => {\n    const formData = new FormData();\n    formData.append('name', updatedArtist.name);\n    formData.append('email', updatedArtist.email);\n    formData.append('role', updatedArtist.role);\n    if (profileImage) {\n      formData.append('image', profileImage);\n    }\n    try {\n      const response = await fetch(`http://localhost:8080/api/artists/update/${artistId}`, {\n        method: 'PUT',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Profile updated successfully:', data);\n        setArtist(data);\n        setIsEditing(false); // Exit edit mode\n      } else {\n        console.error('Failed to update artist data');\n      }\n    } catch (error) {\n      console.error('Error updating artist data:', error);\n    }\n  };\n  if (!artist) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artist-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:8080${artist.imagePath}`,\n        alt: artist.name,\n        className: \"profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), isEditing && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange,\n        className: \"image-upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: updatedArtist.name,\n          onChange: handleInputChange,\n          placeholder: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: updatedArtist.email,\n          onChange: handleInputChange,\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-button\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-button\",\n          onClick: () => setIsEditing(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", artist.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Role: \", artist.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: () => setIsEditing(true),\n          children: \"Edit Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtistProfile, \"R0cfmLwt2ehbdN8jewCDtRuuWoI=\");\n_c = ArtistProfile;\nvar _c;\n$RefreshReg$(_c, \"ArtistProfile\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ArtistProfile","_s","artist","setArtist","isEditing","setIsEditing","updatedArtist","setUpdatedArtist","profileImage","setProfileImage","artistId","fetchArtist","response","fetch","ok","data","json","console","error","handleInputChange","e","name","value","target","handleImageChange","file","files","handleSave","formData","FormData","append","email","role","method","body","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","imagePath","alt","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/components/ArtworkList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/ArtistProfile.css'; // CSS file for styles\r\n\r\nexport default function ArtistProfile() {\r\n  const [artist, setArtist] = useState(null); // Store artist data\r\n  const [isEditing, setIsEditing] = useState(false); // Toggle edit mode\r\n  const [updatedArtist, setUpdatedArtist] = useState({}); // Store updated data\r\n  const [profileImage, setProfileImage] = useState(null); // Handle profile image upload\r\n\r\n  const artistId = 1; // Replace with dynamic artist ID if needed\r\n\r\n  // Fetch artist data on component mount\r\n  useEffect(() => {\r\n    fetchArtist();\r\n  }, []);\r\n\r\n  const fetchArtist = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/artists/${artistId}`); // Fetch artist by ID\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setArtist(data);\r\n        setUpdatedArtist(data); // Initialize updated data\r\n      } else {\r\n        console.error('Failed to fetch artist data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching artist data:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedArtist({ ...updatedArtist, [name]: value });\r\n  };\r\n\r\n  const handleImageChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setProfileImage(file);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const formData = new FormData();\r\n    formData.append('name', updatedArtist.name);\r\n    formData.append('email', updatedArtist.email);\r\n    formData.append('role', updatedArtist.role);\r\n\r\n    if (profileImage) {\r\n      formData.append('image', profileImage);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/api/artists/update/${artistId}`, {\r\n        method: 'PUT',\r\n        body: formData,\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log('Profile updated successfully:', data);\r\n        setArtist(data);\r\n        setIsEditing(false); // Exit edit mode\r\n      } else {\r\n        console.error('Failed to update artist data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating artist data:', error);\r\n    }\r\n  };\r\n\r\n  if (!artist) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"artist-profile\">\r\n      <div className=\"profile-image-container\">\r\n        <img\r\n          src={`http://localhost:8080${artist.imagePath}`}\r\n          alt={artist.name}\r\n          className=\"profile-image\"\r\n        />\r\n        {isEditing && (\r\n          <input type=\"file\" onChange={handleImageChange} className=\"image-upload\" />\r\n        )}\r\n      </div>\r\n      <div className=\"profile-details\">\r\n        {isEditing ? (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={updatedArtist.name}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Name\"\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={updatedArtist.email}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Email\"\r\n            />\r\n            <button className=\"save-button\" onClick={handleSave}>\r\n              Save\r\n            </button>\r\n            <button className=\"cancel-button\" onClick={() => setIsEditing(false)}>\r\n              Cancel\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>{artist.name}</h2>\r\n            <p>Email: {artist.email}</p>\r\n            <p>Role: {artist.role}</p>\r\n            <button className=\"edit-button\" onClick={() => setIsEditing(true)}>\r\n              Edit Profile\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}