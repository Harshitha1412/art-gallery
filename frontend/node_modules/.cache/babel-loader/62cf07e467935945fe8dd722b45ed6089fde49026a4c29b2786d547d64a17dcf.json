{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\components\\\\ArtworkList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/ArtworkList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ArtworkList() {\n  _s();\n  const [artworks, setArtworks] = useState([]);\n  const [addedItems, setAddedItems] = useState([]); // Store IDs of added items\n  const [userId, setUserId] = useState(null); // Store userId from localStorage\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId'); // Get userId from localStorage\n    setUserId(storedUserId); // Set userId in state\n    fetchArtworks(); // Fetch artworks on initial render\n  }, []);\n  useEffect(() => {\n    // Load cart from localStorage when the component mounts\n    const savedCart = JSON.parse(localStorage.getItem('cartItems')) || [];\n    setAddedItems(savedCart.map(item => item.id)); // Set added items from saved cart\n  }, []);\n  const fetchArtworks = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/artworks');\n      if (response.ok) {\n        const data = await response.json();\n        setArtworks(data); // Set artworks data\n      } else {\n        console.error('Failed to fetch artworks');\n      }\n    } catch (error) {\n      console.error('Error fetching artworks:', error);\n    }\n  };\n  const handleAddToCart = artwork => {\n    if (!addedItems.includes(artwork.id)) {\n      const newAddedItems = [...addedItems, artwork.id];\n      setAddedItems(newAddedItems);\n\n      // Save cart to localStorage\n      const currentCart = JSON.parse(localStorage.getItem('cartItems')) || [];\n      const updatedCart = [...currentCart, artwork];\n      localStorage.setItem('cartItems', JSON.stringify(updatedCart)); // Save to localStorage\n    }\n  };\n  const handleGoToCart = () => {\n    // Ensure userId is available and redirect to the cart page\n    if (userId) {\n      navigate(`/visitor/${userId}/cart`);\n    } else {\n      console.error('User ID is not available');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artwork-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Artworks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artwork-grid\",\n      children: artworks.map(artwork => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artwork-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artwork-image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8080${artwork.imagePath}`,\n            alt: artwork.title,\n            className: \"artwork-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"artwork-title\",\n          children: artwork.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"artwork-hover-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artwork-artist\",\n            children: [\"By: \", artwork.artist]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"artwork-description\",\n            children: artwork.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"artwork-cost\",\n          children: [\"Cost: \", artwork.cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), addedItems.includes(artwork.id) ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cart-button black\",\n          onClick: handleGoToCart,\n          children: \"Go to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cart-button\",\n          onClick: () => handleAddToCart(artwork),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, artwork.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(ArtworkList, \"mbIBsG3CF/p6PTZEuErub96ZdVs=\", false, function () {\n  return [useNavigate];\n});\n_c = ArtworkList;\nvar _c;\n$RefreshReg$(_c, \"ArtworkList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","ArtworkList","_s","artworks","setArtworks","addedItems","setAddedItems","userId","setUserId","navigate","storedUserId","localStorage","getItem","fetchArtworks","savedCart","JSON","parse","map","item","id","response","fetch","ok","data","json","console","error","handleAddToCart","artwork","includes","newAddedItems","currentCart","updatedCart","setItem","stringify","handleGoToCart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","imagePath","alt","title","artist","description","cost","onClick","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/components/ArtworkList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ArtworkList.css';\r\n\r\nexport default function ArtworkList() {\r\n  const [artworks, setArtworks] = useState([]);\r\n  const [addedItems, setAddedItems] = useState([]); // Store IDs of added items\r\n  const [userId, setUserId] = useState(null); // Store userId from localStorage\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const storedUserId = localStorage.getItem('userId'); // Get userId from localStorage\r\n    setUserId(storedUserId); // Set userId in state\r\n    fetchArtworks(); // Fetch artworks on initial render\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Load cart from localStorage when the component mounts\r\n    const savedCart = JSON.parse(localStorage.getItem('cartItems')) || [];\r\n    setAddedItems(savedCart.map(item => item.id)); // Set added items from saved cart\r\n  }, []);\r\n\r\n  const fetchArtworks = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/artworks');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setArtworks(data); // Set artworks data\r\n      } else {\r\n        console.error('Failed to fetch artworks');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching artworks:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = (artwork) => {\r\n    if (!addedItems.includes(artwork.id)) {\r\n      const newAddedItems = [...addedItems, artwork.id];\r\n      setAddedItems(newAddedItems);\r\n      \r\n      // Save cart to localStorage\r\n      const currentCart = JSON.parse(localStorage.getItem('cartItems')) || [];\r\n      const updatedCart = [...currentCart, artwork];\r\n      localStorage.setItem('cartItems', JSON.stringify(updatedCart)); // Save to localStorage\r\n    }\r\n  };\r\n\r\n  const handleGoToCart = () => {\r\n    // Ensure userId is available and redirect to the cart page\r\n    if (userId) {\r\n      navigate(`/visitor/${userId}/cart`);\r\n    } else {\r\n      console.error('User ID is not available');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"artwork-list\">\r\n      <h1>Artworks</h1>\r\n      <div className=\"artwork-grid\">\r\n        {artworks.map((artwork) => (\r\n          <div key={artwork.id} className=\"artwork-card\">\r\n            <div className=\"artwork-image-container\">\r\n              <img\r\n                src={`http://localhost:8080${artwork.imagePath}`}\r\n                alt={artwork.title}\r\n                className=\"artwork-image\"\r\n              />\r\n            </div>\r\n            <h2 className=\"artwork-title\">{artwork.title}</h2>\r\n            <div className=\"artwork-hover-details\">\r\n              <p className=\"artwork-artist\">By: {artwork.artist}</p>\r\n              <p className=\"artwork-description\">{artwork.description}</p>\r\n            </div>\r\n            <p className=\"artwork-cost\">Cost: {artwork.cost}</p>\r\n            {addedItems.includes(artwork.id) ? (\r\n              <button\r\n                className=\"cart-button black\"\r\n                onClick={handleGoToCart}\r\n              >\r\n                Go to Cart\r\n              </button>\r\n            ) : (\r\n              <button \r\n                className=\"cart-button\"\r\n                onClick={() => handleAddToCart(artwork)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}