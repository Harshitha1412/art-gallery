{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\components\\\\CartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/CartPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CartPage() {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [userId, setUserId] = useState(null); // Store the logged-in user's ID\n\n  // On component mount, check for userId and load cart\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId'); // Fetch the userId from localStorage\n    if (storedUserId) {\n      setUserId(storedUserId);\n      loadCartItems(storedUserId); // Load cart for the specific user\n    } else {\n      setUserId(null); // User is logged out\n      setCartItems([]); // Clear cart if user is logged out\n      setLoading(false); // No need to load anything\n    }\n  }, []);\n\n  // Load cart items for the specific user\n  const loadCartItems = userId => {\n    const savedCart = JSON.parse(localStorage.getItem(`cartItems_${userId}`)) || [];\n    console.log('Loaded cart items from localStorage:', savedCart); // Debugging log\n    fetchArtworkDetails(savedCart);\n  };\n\n  // Fetch detailed artwork info (including image URL) from backend\n  const fetchArtworkDetails = async savedCart => {\n    try {\n      const detailedItems = await Promise.all(savedCart.map(async item => {\n        const response = await fetch(`http://localhost:8080/api/artworks/${item.id}`);\n        if (response.ok) {\n          const data = await response.json();\n          return {\n            ...item,\n            imageUrl: data.imagePath\n          }; // Append image URL from backend\n        } else {\n          console.error('Failed to fetch artwork details');\n          return item; // In case of failure, return the item as is\n        }\n      }));\n      setCartItems(detailedItems);\n    } catch (error) {\n      console.error('Error fetching artwork details:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Remove an item from the cart\n  const removeFromCart = itemId => {\n    const updatedCart = cartItems.filter(item => item.id !== itemId);\n    setCartItems(updatedCart);\n\n    // Save the updated cart to localStorage for the specific user\n    if (userId) {\n      localStorage.setItem(`cartItems_${userId}`, JSON.stringify(updatedCart));\n    }\n  };\n  if (!userId) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"You are logged out. Please log in to view your cart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Loading your cart...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n  if (cartItems.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Your cart is empty.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:8080${item.imageUrl}`,\n            alt: item.artist,\n            className: \"cart-item-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cost: \", item.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeFromCart(item.id),\n            children: \"Remove from Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(CartPage, \"3ytOynok9LGa7hp/JZbuuLI89kM=\");\n_c = CartPage;\nvar _c;\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CartPage","_s","cartItems","setCartItems","loading","setLoading","userId","setUserId","storedUserId","localStorage","getItem","loadCartItems","savedCart","JSON","parse","console","log","fetchArtworkDetails","detailedItems","Promise","all","map","item","response","fetch","id","ok","data","json","imageUrl","imagePath","error","removeFromCart","itemId","updatedCart","filter","setItem","stringify","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","src","alt","artist","cost","onClick","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/components/CartPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/CartPage.css';\r\n\r\nexport default function CartPage() {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userId, setUserId] = useState(null); // Store the logged-in user's ID\r\n\r\n  // On component mount, check for userId and load cart\r\n  useEffect(() => {\r\n    const storedUserId = localStorage.getItem('userId'); // Fetch the userId from localStorage\r\n    if (storedUserId) {\r\n      setUserId(storedUserId);\r\n      loadCartItems(storedUserId); // Load cart for the specific user\r\n    } else {\r\n      setUserId(null); // User is logged out\r\n      setCartItems([]); // Clear cart if user is logged out\r\n      setLoading(false); // No need to load anything\r\n    }\r\n  }, []);\r\n\r\n  // Load cart items for the specific user\r\n  const loadCartItems = (userId) => {\r\n    const savedCart = JSON.parse(localStorage.getItem(`cartItems_${userId}`)) || [];\r\n    console.log('Loaded cart items from localStorage:', savedCart); // Debugging log\r\n    fetchArtworkDetails(savedCart);\r\n  };\r\n\r\n  // Fetch detailed artwork info (including image URL) from backend\r\n  const fetchArtworkDetails = async (savedCart) => {\r\n    try {\r\n      const detailedItems = await Promise.all(\r\n        savedCart.map(async (item) => {\r\n          const response = await fetch(`http://localhost:8080/api/artworks/${item.id}`);\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            return { ...item, imageUrl: data.imagePath }; // Append image URL from backend\r\n          } else {\r\n            console.error('Failed to fetch artwork details');\r\n            return item; // In case of failure, return the item as is\r\n          }\r\n        })\r\n      );\r\n      setCartItems(detailedItems);\r\n    } catch (error) {\r\n      console.error('Error fetching artwork details:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Remove an item from the cart\r\n  const removeFromCart = (itemId) => {\r\n    const updatedCart = cartItems.filter((item) => item.id !== itemId);\r\n    setCartItems(updatedCart);\r\n\r\n    // Save the updated cart to localStorage for the specific user\r\n    if (userId) {\r\n      localStorage.setItem(`cartItems_${userId}`, JSON.stringify(updatedCart));\r\n    }\r\n  };\r\n\r\n  if (!userId) {\r\n    return <p style={{ textAlign: 'center' }}>You are logged out. Please log in to view your cart.</p>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <p style={{ textAlign: 'center' }}>Loading your cart...</p>;\r\n  }\r\n\r\n  if (cartItems.length === 0) {\r\n    return <p style={{ textAlign: 'center' }}>Your cart is empty.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 style={{ textAlign: 'center' }}>Your Cart</h1>\r\n      <div className=\"cart-items\">\r\n        {cartItems.map((item) => (\r\n          <div key={item.id} className=\"cart-item\">\r\n            <div className=\"cart-item-image-container\">\r\n              {/* Display image using the URL fetched from backend */}\r\n              <img\r\n                src={`http://localhost:8080${item.imageUrl}`}\r\n                alt={item.artist}\r\n                className=\"cart-item-image\"\r\n              />\r\n            </div>\r\n            <div className=\"cart-item-details\">\r\n              <h2>{item.artist}</h2>\r\n              <p>Cost: {item.cost}</p>\r\n              <button onClick={() => removeFromCart(item.id)}>Remove from Cart</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}