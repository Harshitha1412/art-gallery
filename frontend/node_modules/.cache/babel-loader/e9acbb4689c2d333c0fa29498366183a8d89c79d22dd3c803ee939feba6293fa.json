{"ast":null,"code":"var _jsxFileName = \"F:\\\\Java\\\\ArtGallery-React\\\\frontend\\\\src\\\\Artist\\\\Myartworks.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/MyArtworks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyArtworks() {\n  _s();\n  const [artworks, setArtworks] = useState([]); // Artworks of the logged-in artist\n  const [filteredArtworks, setFilteredArtworks] = useState([]); // Filtered artworks for the logged-in artist\n  const [errorMessage, setErrorMessage] = useState(''); // Error message state\n  const [artistDetails, setArtistDetails] = useState(null); // Store artist details\n\n  const artistId = localStorage.getItem('artistId'); // Get the logged-in artist ID from localStorage\n\n  // Fetch artist details to get the artist's name\n  useEffect(() => {\n    if (!artistId) {\n      setErrorMessage('Artist not logged in.');\n      return;\n    }\n\n    // Fetch artist details to identify the logged-in artist\n    fetch(`http://localhost:8080/api/artists/${artistId}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch artist details');\n      }\n      return response.json();\n    }).then(artistData => {\n      setArtistDetails(artistData); // Store artist details\n      fetchArtworks(artistData.name); // Fetch artworks based on logged-in artist's name\n    }).catch(error => {\n      setErrorMessage('Failed to fetch artist details.');\n      console.error(error);\n    });\n  }, [artistId]);\n\n  // Fetch artworks from the backend and filter them based on the logged-in artist\n  const fetchArtworks = artistName => {\n    fetch('http://localhost:8080/api/artworks').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch artworks');\n      }\n      return response.json();\n    }).then(data => {\n      // Filter artworks by artist name\n      const artistArtworks = data.filter(artwork => artwork.artist === artistName);\n      setArtworks(data); // Set all artworks (if needed for other logic)\n      setFilteredArtworks(artistArtworks); // Set filtered artworks belonging to the logged-in artist\n    }).catch(error => {\n      setErrorMessage('Failed to fetch artworks.');\n      console.error(error);\n    });\n  };\n  const handleEdit = id => {\n    console.log(`Edit artwork with ID: ${id}`);\n    // Add your edit logic here\n  };\n  const handleDelete = id => {\n    console.log(`Delete artwork with ID: ${id}`);\n    // Add your delete logic here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-artworks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Artworks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artworks-container\",\n      children: filteredArtworks.length > 0 ? filteredArtworks.map(artwork => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artwork-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artwork.imagePath ? `/uploads/${artwork.imagePath}` : '/default-image.jpg',\n          alt: artwork.artist,\n          onError: e => e.target.src = '/default-image.jpg' // Fallback for missing images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: artwork.title || 'Untitled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Artist:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 18\n          }, this), \" \", artwork.artist || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Cost:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 18\n          }, this), \" $\", artwork.cost || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 18\n          }, this), \" \", artwork.description || 'No description available']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Added On:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 18\n          }, this), \" \", artwork.timestamp ? new Date(artwork.timestamp).toLocaleString() : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleEdit(artwork.id),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDelete(artwork.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, artwork.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No artworks found for this artist.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(MyArtworks, \"wUfvtN+hSDp90RohhCaT40Nqk6w=\");\n_c = MyArtworks;\nvar _c;\n$RefreshReg$(_c, \"MyArtworks\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MyArtworks","_s","artworks","setArtworks","filteredArtworks","setFilteredArtworks","errorMessage","setErrorMessage","artistDetails","setArtistDetails","artistId","localStorage","getItem","fetch","then","response","ok","Error","json","artistData","fetchArtworks","name","catch","error","console","artistName","data","artistArtworks","filter","artwork","artist","handleEdit","id","log","handleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","imagePath","alt","onError","e","target","title","cost","description","timestamp","Date","toLocaleString","onClick","_c","$RefreshReg$"],"sources":["F:/Java/ArtGallery-React/frontend/src/Artist/Myartworks.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/MyArtworks.css';\r\n\r\nexport default function MyArtworks() {\r\n  const [artworks, setArtworks] = useState([]);  // Artworks of the logged-in artist\r\n  const [filteredArtworks, setFilteredArtworks] = useState([]); // Filtered artworks for the logged-in artist\r\n  const [errorMessage, setErrorMessage] = useState('');  // Error message state\r\n  const [artistDetails, setArtistDetails] = useState(null);  // Store artist details\r\n\r\n  const artistId = localStorage.getItem('artistId'); // Get the logged-in artist ID from localStorage\r\n\r\n  // Fetch artist details to get the artist's name\r\n  useEffect(() => {\r\n    if (!artistId) {\r\n      setErrorMessage('Artist not logged in.');\r\n      return;\r\n    }\r\n\r\n    // Fetch artist details to identify the logged-in artist\r\n    fetch(`http://localhost:8080/api/artists/${artistId}`)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch artist details');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((artistData) => {\r\n        setArtistDetails(artistData);  // Store artist details\r\n        fetchArtworks(artistData.name);  // Fetch artworks based on logged-in artist's name\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage('Failed to fetch artist details.');\r\n        console.error(error);\r\n      });\r\n  }, [artistId]);\r\n\r\n  // Fetch artworks from the backend and filter them based on the logged-in artist\r\n  const fetchArtworks = (artistName) => {\r\n    fetch('http://localhost:8080/api/artworks')\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch artworks');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // Filter artworks by artist name\r\n        const artistArtworks = data.filter(\r\n          (artwork) => artwork.artist === artistName\r\n        );\r\n        setArtworks(data);  // Set all artworks (if needed for other logic)\r\n        setFilteredArtworks(artistArtworks);  // Set filtered artworks belonging to the logged-in artist\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage('Failed to fetch artworks.');\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleEdit = (id) => {\r\n    console.log(`Edit artwork with ID: ${id}`);\r\n    // Add your edit logic here\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    console.log(`Delete artwork with ID: ${id}`);\r\n    // Add your delete logic here\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-artworks\">\r\n      <h1>My Artworks</h1>\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n      <div className=\"artworks-container\">\r\n        {filteredArtworks.length > 0 ? (\r\n          filteredArtworks.map((artwork) => (\r\n            <div key={artwork.id} className=\"artwork-card\">\r\n              <img\r\n                src={artwork.imagePath ? `/uploads/${artwork.imagePath}` : '/default-image.jpg'}\r\n                alt={artwork.artist}\r\n                onError={(e) => (e.target.src = '/default-image.jpg')}  // Fallback for missing images\r\n              />\r\n              <h2>{artwork.title || 'Untitled'}</h2>\r\n              <p><strong>Artist:</strong> {artwork.artist || 'Unknown'}</p>\r\n              <p><strong>Cost:</strong> ${artwork.cost || 'N/A'}</p>\r\n              <p><strong>Description:</strong> {artwork.description || 'No description available'}</p>\r\n              <p><strong>Added On:</strong> {artwork.timestamp ? new Date(artwork.timestamp).toLocaleString() : 'Unknown'}</p>\r\n              <div className=\"actions\">\r\n                <button className=\"edit-button\" onClick={() => handleEdit(artwork.id)}>Edit</button>\r\n                <button className=\"delete-button\" onClick={() => handleDelete(artwork.id)}>Delete</button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No artworks found for this artist.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}