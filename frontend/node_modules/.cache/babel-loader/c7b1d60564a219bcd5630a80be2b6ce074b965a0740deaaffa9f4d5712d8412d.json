{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n  if (!role) {\n    setErrorMessage('Please select a role.');\n    return;\n  }\n  const loginData = {\n    username,\n    password,\n    role\n  };\n  let loginUrl = '';\n  switch (role) {\n    case 'ADMIN':\n      loginUrl = 'http://localhost:8080/api/admin/login';\n      break;\n    case 'ARTIST':\n      loginUrl = 'http://localhost:8080/api/artists/login';\n      break;\n    case 'CURATOR':\n      loginUrl = 'http://localhost:8080/api/curators/login';\n      break;\n    case 'VISITOR':\n      loginUrl = 'http://localhost:8080/api/login';\n      break;\n    default:\n      setErrorMessage('Invalid role');\n      return;\n  }\n  try {\n    const response = await axios.post(loginUrl, loginData);\n    console.log('Login Response:', response.data);\n    const {\n      role: responseRole,\n      userId\n    } = response.data;\n    if (userId) {\n      localStorage.setItem('authToken', 'valid-auth-token'); // Mock token\n      localStorage.setItem('userId', userId);\n      localStorage.setItem('role', responseRole);\n      console.log('User ID stored:', localStorage.getItem('userId'));\n      switch (responseRole) {\n        case 'ADMIN':\n          window.location.href = `/admin/${userId}`;\n          break;\n        case 'ARTIST':\n          window.location.href = `/artist/${userId}`;\n          break;\n        case 'VISITOR':\n          window.location.href = `/${userId}`;\n          break;\n        case 'CURATOR':\n          window.location.href = `/curator/${userId}`;\n          break;\n        default:\n          window.location.href = '/login';\n          break;\n      }\n    } else {\n      setErrorMessage('Login failed. No user ID received.');\n    }\n  } catch (error) {\n    var _error$response, _error$response$data;\n    setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.');\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","role","setErrorMessage","loginData","username","password","loginUrl","response","axios","post","console","log","data","responseRole","userId","localStorage","setItem","getItem","window","location","href","error","_error$response","_error$response$data","message"],"sources":["F:/Java/ArtGallery-React/frontend/src/components/Login.js"],"sourcesContent":["const handleLogin = async (e) => {\r\n  e.preventDefault();\r\n\r\n  if (!role) {\r\n    setErrorMessage('Please select a role.');\r\n    return;\r\n  }\r\n\r\n  const loginData = { username, password, role };\r\n  let loginUrl = '';\r\n\r\n  switch (role) {\r\n    case 'ADMIN':\r\n      loginUrl = 'http://localhost:8080/api/admin/login';\r\n      break;\r\n    case 'ARTIST':\r\n      loginUrl = 'http://localhost:8080/api/artists/login';\r\n      break;\r\n    case 'CURATOR':\r\n      loginUrl = 'http://localhost:8080/api/curators/login';\r\n      break;\r\n    case 'VISITOR':\r\n      loginUrl = 'http://localhost:8080/api/login';\r\n      break;\r\n    default:\r\n      setErrorMessage('Invalid role');\r\n      return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.post(loginUrl, loginData);\r\n    console.log('Login Response:', response.data);\r\n\r\n    const { role: responseRole, userId } = response.data;\r\n\r\n    if (userId) {\r\n      localStorage.setItem('authToken', 'valid-auth-token');  // Mock token\r\n      localStorage.setItem('userId', userId);\r\n      localStorage.setItem('role', responseRole);\r\n\r\n      console.log('User ID stored:', localStorage.getItem('userId'));\r\n\r\n      switch (responseRole) {\r\n        case 'ADMIN':\r\n          window.location.href = `/admin/${userId}`;\r\n          break;\r\n        case 'ARTIST':\r\n          window.location.href = `/artist/${userId}`;\r\n          break;\r\n        case 'VISITOR':\r\n          window.location.href = `/${userId}`;\r\n          break;\r\n        case 'CURATOR':\r\n          window.location.href = `/curator/${userId}`;\r\n          break;\r\n        default:\r\n          window.location.href = '/login';\r\n          break;\r\n      }\r\n    } else {\r\n      setErrorMessage('Login failed. No user ID received.');\r\n    }\r\n  } catch (error) {\r\n    setErrorMessage(error.response?.data?.message || 'Login failed. Please try again.');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAC,IAAK;EAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI,CAACC,IAAI,EAAE;IACTC,eAAe,CAAC,uBAAuB,CAAC;IACxC;EACF;EAEA,MAAMC,SAAS,GAAG;IAAEC,QAAQ;IAAEC,QAAQ;IAAEJ;EAAK,CAAC;EAC9C,IAAIK,QAAQ,GAAG,EAAE;EAEjB,QAAQL,IAAI;IACV,KAAK,OAAO;MACVK,QAAQ,GAAG,uCAAuC;MAClD;IACF,KAAK,QAAQ;MACXA,QAAQ,GAAG,yCAAyC;MACpD;IACF,KAAK,SAAS;MACZA,QAAQ,GAAG,0CAA0C;MACrD;IACF,KAAK,SAAS;MACZA,QAAQ,GAAG,iCAAiC;MAC5C;IACF;MACEJ,eAAe,CAAC,cAAc,CAAC;MAC/B;EACJ;EAEA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAACH,QAAQ,EAAEH,SAAS,CAAC;IACtDO,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;IAE7C,MAAM;MAAEX,IAAI,EAAEY,YAAY;MAAEC;IAAO,CAAC,GAAGP,QAAQ,CAACK,IAAI;IAEpD,IAAIE,MAAM,EAAE;MACVC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAAE;MACxDD,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEF,MAAM,CAAC;MACtCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,YAAY,CAAC;MAE1CH,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,YAAY,CAACE,OAAO,CAAC,QAAQ,CAAC,CAAC;MAE9D,QAAQJ,YAAY;QAClB,KAAK,OAAO;UACVK,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAUN,MAAM,EAAE;UACzC;QACF,KAAK,QAAQ;UACXI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,WAAWN,MAAM,EAAE;UAC1C;QACF,KAAK,SAAS;UACZI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,IAAIN,MAAM,EAAE;UACnC;QACF,KAAK,SAAS;UACZI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAYN,MAAM,EAAE;UAC3C;QACF;UACEI,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;UAC/B;MACJ;IACF,CAAC,MAAM;MACLlB,eAAe,CAAC,oCAAoC,CAAC;IACvD;EACF,CAAC,CAAC,OAAOmB,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACdrB,eAAe,CAAC,EAAAoB,eAAA,GAAAD,KAAK,CAACd,QAAQ,cAAAe,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,iCAAiC,CAAC;EACrF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}